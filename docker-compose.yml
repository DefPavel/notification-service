version: '3.8'
services:
  # Zookeeper для управления Kafka-брокерами
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    networks:
      - kafka_network
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - '${ZOOKEEPER_CLIENT_PORT:-2181}:${ZOOKEEPER_CLIENT_PORT:-2181}'

  # Kafka брокер
  kafka:
    restart: unless-stopped
    image: bitnami/kafka:latest
    container_name: kafka
    networks:
      - kafka_network
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:${ZOOKEEPER_CLIENT_PORT:-2181}
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${KAFKA_BROKER:-kafka:9092}
      - ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL=0
    ports:
      - '${KAFKA_ADVERTISED_PORT:-9092}:${KAFKA_ADVERTISED_PORT:-9092}'

  # 1 gateway application
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    environment:
      - KAFKA_BROKER=${KAFKA_BROKER:-kafka:9092}
      - KAFKA_GROUP_ID=${KAFKA_GATEWAY_GROUP_ID:-gateway-group}
      - GATEWAY_PORT=${GATEWAY_PORT:-3000}
    ports:
      - '${GATEWAY_PORT:-3000}:${GATEWAY_PORT:-3000}'
    depends_on:
      - kafka
    volumes:
      - './gateway:/var/www/gateway'
    networks:
      - kafka_network

  # 2 micro-service
  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker
    environment:
      - KAFKA_BROKER=${KAFKA_BROKER:-kafka:9092}
      - KAFKA_GROUP_ID=${KAFKA_WORKER_GROUP_ID:-worker-group}
      - EMAIL_USER=${EMAIL_USER:-email@gmail.com}
      - EMAIL_PASS=${EMAIL_PASS:-password-gmail}
    depends_on:
      - kafka
    volumes:
      - './worker:/var/www/worker'
    networks:
      - kafka_network

networks:
  kafka_network:
    external: true
